var documenterSearchIndex = {"docs":
[{"location":"planck/#Functions-for-blackbody-thermal-emission-(and-its-derivatives)-calculation","page":"PlanckFunctions","title":"Functions for blackbody thermal emission (and its derivatives) calculation","text":"","category":"section"},{"location":"planck/#Main.PlanckFunctions.Dₗibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.Dₗibb","text":"Dₗibb(λ,T)\n\nReturns a three-element tuple of (1.bb intensity,2.its first and 3.second derivative  with respect to the wavelentgh)\n\nInput:     λ - wavelength, μm     T - temperature, K\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.Dₜibb!-Tuple{Tuple{AbstractVector, AbstractVector, AbstractVector}, AbstractVector, Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.Dₜibb!","text":"Dₜibb!(input_tuple, λ::AbstractVector,T)\n\nIn-place filling the tuple of (bb intensity, its first ,and second ) derivatives with  respect to temperature d²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(C₂/(λ⁶T³))[(C₂/(λT))(2eᵃ¹/(eᵃ¹-1)-1)-2] d²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(a₁/(λ⁵T²))[a₁(2eᵃ¹/(eᵃ¹-1) -1)-2] a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)   #  1/expm1(a1) a₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a) d²Ibb/dT² = C₁a₂a₃(a₁/(λ⁵T²))[a₁(2a₃ - 1))-2]     as far as          Ibb = (λ⁻⁵) C₁a₂     and          dIbb/dT = C₁a₃a₂a₁(1/(λ⁵T)) = a₃a₁Ibb/T      hense         d²Ibb/dT² = C₁a₂a₃a₁(1/(λ⁵T²))[a₁(2a₃ - 1))-2]              = [a₃a₁Ibb/T^2][a₁(2a₃ - 1))-2]                  = [(dIbb/dT)/T][a₁(2a₃ - 1))-2]  Input:     input_tuple, [Nx0 vector or nothing,Nx0 vector or nothing, Nx0 vector or nothing]     λ - wavelength, μm, [Nx0]     T - temperature, K   \n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.Dₜibb-Tuple{AbstractVector, AbstractVector}","page":"PlanckFunctions","title":"Main.PlanckFunctions.Dₜibb","text":"Dₜibb(λ::AbstractVector,T::AbstractVector)\n\nCalculates tuple of (Ibb,dIbb/dT,d²Ibb/dT²) calculated according to: d²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(C₂/(λ⁶T³))[(C₂/(λT))(2eᵃ¹/(eᵃ¹-1)-1)-2] d²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(a₁/(λ⁵T²))[a₁(2eᵃ¹/(eᵃ¹-1) -1)-2] a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)   #  1/expm1(a1) a₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a) d²Ibb/dT² = C₁a₂a₃(a₁/(λ⁵T²))[a₁(2a₃ - 1))-2]     as far as          Ibb = (λ⁻⁵) C₁a₂     and          dIbb/dT = C₁a₃a₂a₁(1/(λ⁵T)) = a₃a₁Ibb/T      hense         d²Ibb/dT² = C₁a₂a₃a₁(1/(λ⁵T²))[a₁(2a₃ - 1))-2]              = [a₃a₁Ibb/T^2][a₁(2a₃ - 1))-2]                  = [(dIbb/dT)/T][a₁(2a₃ - 1))-2]  Input:     λ - wavelength region, μm     T - temperature, Kelvins Returns:     (Ibb,dIbb/dT,d²Ibb/dT²)\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions._average","page":"PlanckFunctions","title":"Main.PlanckFunctions._average","text":"_average(x::AbstractVector, λ::AbstractVector,T,f::Union{typeof(ibb),typeof(∇ₜibb)},fx::Function=inv)\n\nGeneric function to evaluate the averaged value of some fx function of variable x dependent on wavelength λ  for temperature T. Uses simple trapezoidal method to perform the integration.\n\nxᵣ = fx(∫fx(x)f(λ,T)dλ), the default value of fx is inv\n\n\n\n\n\n","category":"function"},{"location":"planck/#Main.PlanckFunctions.a₁₂₃!-Tuple{AbstractMatrix, AbstractVector, Float64}","page":"PlanckFunctions","title":"Main.PlanckFunctions.a₁₂₃!","text":"a₁₂₃!(amat::AbstractMatrix,λ::AbstractVector,T::Float64)\n\nIn-place filling of the intermediate matrix\na₁=C₂/(λ*T)  - amat first column\na₂ = 1/(eᵃ¹-1)  - amat second column \na₃ = eᵃ¹/(eᵃ¹-1) - amat third column\n\nInput:\n    amat - matrix of intermediate coefficients size [Nx3]\n    λ - wavelength in μm,  [Nx0]\n    T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.a₁₂₃-Tuple{Any, Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.a₁₂₃","text":"a₁₂₃(λ::Float64,T::Float64)\n\nReturn tuple of three values:\n\n1 - a1 = C₂/(λT) 2 - a2 = 1/expm1(a1) 3 - a3 = exp(a1)a2\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.band_power-Tuple{Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.band_power","text":"band_power(T;λₗ=0.0,λᵣ=Inf,tol=1e-6)\n\nTotal bb with temperature T integral intensity within (in-band radiance), [W/(m²⋅sr)] the spectral range λₗ...λᵣ (by default the range is 0...inf) tol - tolerance of intehration\n\nInput:     T - temperature,Kelvins     (optional)     λₗ - left wavelength boundary, μm     λᵣ - right wavelength boundary, μm     tol - intergation tolerance\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.ibb!-Tuple{AbstractVector, AbstractVector, AbstractMatrix}","page":"PlanckFunctions","title":"Main.PlanckFunctions.ibb!","text":"ibb!(i::AbstractVector,λ::AbstractVector,amat::AbstractMatrix)::Nothing\n\nIn-place blackbody intensity with intermediate coefficients provided externally, [W/m2-sr-mkm] Ibb =  C₁(λ⁻⁵)a₂ , where a₁=C₂/(λ*T)  - amat first column a₂ = 1/(eᵃ¹-1)  - amat second column \n\nInput:     i - BB intensity, [Nx0]     λ - wavelength in μm,  [Nx0]     amat - matrix of intermediate coefficients,  [Nx3]\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.ibb!-Tuple{AbstractVector, AbstractVector, Float64}","page":"PlanckFunctions","title":"Main.PlanckFunctions.ibb!","text":"ibb!(i::AbstractVector,λ::AbstractVector,T::Float64)\n\nIn-place blackbody intensity,  [W/m²⋅sr⋅μm] Ibb = (λ⁻⁵)* C₁/(eᵃ¹-1) , where a₁=C₂/(λ*T) Input:     i - bb intensity vector, [Nx0]     λ - wavelength in μm, [Nx0]     T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.ibb-Tuple{AbstractVector, AbstractMatrix}","page":"PlanckFunctions","title":"Main.PlanckFunctions.ibb","text":"ibb(λ::AbstractVector,amat::AbstractMatrix)\n\nBlackbody spectral intensity (spectral radiance)  with intermediate matrix provided externally, [W/m²⋅sr⋅μm] Ibb =  C₁(λ⁻⁵)a₂ , where a₁=C₂/(λ*T)  - amat first column a₂ = 1/(eᵃ¹-1)  - amat second column  Input:     amat - matrix of intermediate coefficients,  [Nx3]     λ - wavelength in μm,  [Nx0]\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.ibb-Tuple{AbstractVector, AbstractVector}","page":"PlanckFunctions","title":"Main.PlanckFunctions.ibb","text":"ibb(λ::AbstractVector,T::AbstractVector)\n\nBlackbody spectral intensity (spectral radiance),  [W/m²⋅sr⋅μm] Ibb = (λ⁻⁵)* C₁/(eᵃ¹-1) , where a₁=C₂/(λ*T) Input:     λ - wavelength in μm, [Nx0]     T - temperature in Kelvins [Mx0]\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.ibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.ibb","text":"ibb(λ,T)\n\nBlackbody spectral intensity (spectral radiance), [W/m²⋅sr⋅μm] Ibb = (λ⁻⁵)* C₁/(eᵃ¹-1) , where a₁=C₂/(λ*T) Input:     λ - wavelength in μm     T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.planck_averaged-Tuple{AbstractVector, AbstractVector, Number}","page":"PlanckFunctions","title":"Main.PlanckFunctions.planck_averaged","text":"planck_averaged(x::AbstractVector, λ::AbstractVector,T::Number)\n\nEvaluates the Planck-averaged value of x(λ) for temperature T:\n\nxᵣ = ∫x(λ)ibb(λ,T)dλ \n\nCan be used for example to evaluate the integral emissiovity from measured spectral emissivity\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.planck_averaged_attenuation-Tuple{AbstractVector, AbstractVector, Number}","page":"PlanckFunctions","title":"Main.PlanckFunctions.planck_averaged_attenuation","text":"planck_averaged_attenuation(α::AbstractVector, λ::AbstractVector,T::Number)\n\nEvaluates the Planck-averaged spectral attenuation coefficient (the summation of spectral scattering and absorption coefficients) α(λ) for temperature T:\n\nαᵣ = (∫(1/α(λ))⋅ibb(λ,T)dλ)⁻¹  \n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.power-Tuple{Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.power","text":"power(T)\n\nReturns integral (over the wavelength) intensity of BB (radiance)  at temperature T\n\nUnits: W/(m²⋅sr)\n\nInput:     T - temperature, K\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.rosseland_averaged_attenuation-Tuple{AbstractVector, AbstractVector, Number}","page":"PlanckFunctions","title":"Main.PlanckFunctions.rosseland_averaged_attenuation","text":"rosseland_averaged_attenuation(α::AbstractVector, λ::AbstractVector,T::Number)\n\nEvaluates the Rosseland-averaged spectral attenuation coefficient (the summation of spectral scattering and absorption coefficients) α(λ) for temperature T:\n\nαᵣ = (∫(1/α(λ))⋅∇ₜibb(λ,T)dλ)⁻¹  \n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.tₘ-Tuple{Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.tₘ","text":"tₘ(λ)\n\nThe temperature of BB having maximum at wavelength λ in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.units-Tuple{typeof(ibb)}","page":"PlanckFunctions","title":"Main.PlanckFunctions.units","text":"units(::typeof(ibb))\n\nreturns units string\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.λₘ-Tuple{Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.λₘ","text":"λₘ(T)\n\nThe wavelength (in μm) of bb intensity maximum vs temperature T  argmax(Planck(T))  - Wien's displacement law\n\nInput:     T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇²ₗibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇²ₗibb","text":"∇²ₗibb(λ,T)\n\nBB intensity second derivative with respect to the wavelength\n\nInput:     λ - wavelength, μm     T - temperature, K\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇²ₜibb!-Tuple{AbstractMatrix{Float64}, AbstractVector{Float64}, AbstractVector{Float64}}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇²ₜibb!","text":"∇²ₜibb!(h::AbstractMatrix{Float64},λ::AbstractVector{Float64},T::AbstractVector{Float64})\n\nIn-place bb intensity second order derivative with respect to temperature\n\nd²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(C₂/(λ⁶T³))[(C₂/(λT))(2eᵃ¹/(eᵃ¹-1)-1)-2] d²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(a₁/(λ⁵T²))[a₁(2eᵃ¹/(eᵃ¹-1) -1)-2] a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)   #  1/expm1(a1) a₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a) d²Ibb/dT² = C₁a₂a₃(a₁/(λ⁵T²))[a₁(2*a₃ - 1))-2]\n\nInput :             h  - to be filled, [Nx0]             λ - wavelength in μm, [Nx0]             T - tmperature in Kelvins   \n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇²ₜibb!-Tuple{AbstractVector{Float64}, AbstractVector{Float64}, Float64, AbstractMatrix{Float64}}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇²ₜibb!","text":"∇²ₜibb!(h::AbstractVector{Float64},λ::AbstractVector{Float64},T::Float64,amat::AbstractMatrix{Float64})::Nothing\n\nIn-place bb intensity second order derivative with respect to temperature with  intermediate matrix provided externally\n\nd²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(C₂/(λ⁶T³))[(C₂/(λT))(2eᵃ¹/(eᵃ¹-1)-1)-2] d²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(a₁/(λ⁵T²))[a₁(2eᵃ¹/(eᵃ¹-1) -1)-2] a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)   #  1/expm1(a1) a₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a) d²Ibb/dT² = C₁a₂a₃(a₁/(λ⁵T²))[a₁(2*a₃ - 1))-2]\n\nInput :         h  - to be filled, [Nx0]         λ - wavelength in μm, [Nx0]         T - temperature in Kelvins         amat - matrix of intermediate coefficients,  [Nx3]\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇²ₜibb!-Tuple{AbstractVector{Float64}, AbstractVector{Float64}, Float64}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇²ₜibb!","text":"∇²ₜibb!(h::AbstractVector{Float64},λ::AbstractVector{Float64},T::Float64)\n\nIn-place bb intensity second order derivative with respect to temperature\n\nd²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(C₂/(λ⁶T³))[(C₂/(λT))(2eᵃ¹/(eᵃ¹-1)-1)-2] d²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(a₁/(λ⁵T²))[a₁(2eᵃ¹/(eᵃ¹-1) -1)-2] a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)   #  1/expm1(a1) a₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a) d²Ibb/dT² = C₁a₂a₃(a₁/(λ⁵T²))[a₁(2*a₃ - 1))-2]\n\nInput :             h  - to be filled, [Nx0]             λ - wavelength in μm, [Nx0]             T - tmperature in Kelvins  \n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇²ₜibb!-Tuple{AbstractVector{Float64}, Float64, AbstractMatrix{Float64}, AbstractVector{Float64}}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇²ₜibb!","text":"∇²ₜibb!(h::AbstractVector{Float64},T::Float64,amat::AbstractMatrix{Float64},∇i::AbstractVector{Float64})::Nothing\n\nIn-place bb intensity second order derivative with respect to temperature  with provided both the intermediate matrix amat and the the Planck function first derivative\n\nd²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(C₂/(λ⁶T³))[(C₂/(λT))(2eᵃ¹/(eᵃ¹-1)-1)-2] d²Ibb/dT² = C₁(eᵃ¹/(eᵃ¹-1)²)(a₁/(λ⁵T²))[a₁(2eᵃ¹/(eᵃ¹-1) -1)-2] a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)   #  1/expm1(a1) a₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a) d²Ibb/dT² = C₁a₂a₃(a₁/(λ⁵T²))[a₁(2a₃ - 1))-2]     as far as          Ibb = (λ⁻⁵) C₁a₂     and          dIbb/dT = C₁a₃a₂a₁(1/(λ⁵T)) = a₃a₁Ibb/T      hense         d²Ibb/dT² = C₁a₂a₃a₁(1/(λ⁵T²))[a₁(2a₃ - 1))-2]              = [a₃a₁Ibb/T^2][a₁(2a₃ - 1))-2]                  = [(dIbb/dT)/T][a₁(2a₃ - 1))-2]  Input :         h  - to be filled, [Nx0]         λ - wavelength in μm, [Nx0]         amat - matrix of intermediate coefficients,  [Nx3]         ∇i - vector of bb intensity first derivatives, [Nx0]\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇²ₜibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇²ₜibb","text":"∇²ₜibb(λ,T)\n\nBB intensity second derivative with respect to temperature\n\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T³))*[(C₂/(λ*T))*(2*eᵃ¹/(eᵃ¹-1)-1)-2]\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(a₁/(λ⁵*T²))*[a₁*(2*eᵃ¹/(eᵃ¹-1) -1)-2]\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\nd²Ibb/dT² = C₁*a₂*a₃*(a₁/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2]\n\nInput :\n            λ - wavelength in μm\n            T - tmperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇ₗibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇ₗibb","text":"∇ₗibb(λ,T)\n\nBB intensity first derivative with respect to the wavelength\n\nInput:     λ - wavelength, μm     T - temperature, K\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇ₜibb!-Tuple{AbstractMatrix, AbstractVector, AbstractVector}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇ₜibb!","text":"∇ₜibb!(g::AbstractMatrix,λ::AbstractVector,T::AbstractVector)\n\nIn-place BB intensity first derivative with respect to temperature a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)   #  1/expm1(a1) a₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a) dIbb/dT = C₁a₃a₂a₁(1/(λ⁵T)) Input:     g - vector to be filled, [Nx0]     λ - wavelength in μm, [Nx0]     T - temperature in Kelvins     \n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇ₜibb!-Tuple{AbstractVector, AbstractVector, Any, AbstractMatrix}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇ₜibb!","text":"∇ₜibb!(g::AbstractVector,λ::AbstractVector,T,amat::AbstractMatrix)\n\nIn-place bb intensity first derivative with respect to temperature with externally provided amat  - matrix with columns a₁,a₂,a₃\n\ndIbb/dT = C₁(eᵃ¹/(eᵃ¹-1)²)(C₂/(λ⁶T²)) a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)   #  1/expm1(a1) a₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a) dIbb/dT = C₁a₃a₂a₁(1/(λ⁵*T))\n\nInput:     g - to be filled, [Nx0]     λ - wavelength in μm, [Nx0]     T - temperature in Kelvins     amat - matrix of intermediate coefficients, [Nx3]\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇ₜibb!-Tuple{AbstractVector, Any, AbstractMatrix, AbstractVector}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇ₜibb!","text":"∇ₜibb!(g::AbstractVector,T, amat::AbstractMatrix,i::AbstractVector)::Nothing\n\nIn-place bb intensity first derivative with respect to temperature with externally provided amat  - matrix with columns a₁,a₂,a₃\n\ndIbb/dT = C₁(eᵃ¹/(eᵃ¹-1)²)(C₂/(λ⁶T²)) a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)   #  1/expm1(a1) a₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a) dIbb/dT = C₁a₃a₂a₁(1/(λ⁵T)) as far as Ibb = C₁a₂/λ⁵ dIbb/dT = a₃a₁C₁(a₂/λ⁵)(1/T)=a₃a₁Ibb/T\n\nInput:     g - to be filled, [Nx0]     λ - wavelength in μm, [Nx0]     T - temperature in Kelvins     amat - matrix of intermediate coefficients, [Nx3]\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇ₜibb-Tuple{AbstractVector, Any, AbstractMatrix}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇ₜibb","text":"∇ₜibb(λ::AbstractVector,T,amat::AbstractMatrix)\n\nBB intensity first derivative with respect to temperature with externally provided matrix of intermediate coefficients dIbb/dT = C₁(eᵃ¹/(eᵃ¹-1)²)(C₂/(λ⁶T²)) a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)    a₃ = eᵃ¹/(eᵃ¹-1)  dIbb/dT = C₁a₃a₂a₁(1/(λ⁵*T)) Input:     λ - wavelength in μm, [Nx0]     T - temperature in Kelvins     amat - matrix of intermediate coefficients, [Nx3]\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∇ₜibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∇ₜibb","text":"∇ₜibb(λ,T)\n\nBB intensity first derivative with respect to temperature dIbb/dT = C₁(eᵃ¹/(eᵃ¹-1)²)(C₂/(λ⁶T²)) a₁=C₂/(λT) a₂ = 1/(eᵃ¹-1)   #  1/expm1(a1) a₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a) dIbb/dT = C₁a₃a₂a₁(1/(λ⁵*T)) Input:     λ - wavelength in μm     T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"planck/#Main.PlanckFunctions.∫ibbₗ-Tuple{Any}","page":"PlanckFunctions","title":"Main.PlanckFunctions.∫ibbₗ","text":"∫ibbₗ(T;λₗ=0.0,λᵣ=Inf,tol=1e-6)\n\nRelative (with respect to the integral power in the whole spectrum) integral intensity of bb in the spectral range λₗ...λᵣ (by default the range is 0...inf)\n\nInput:     T - temperature,Kelvins     (optional)     λₗ - left wavelength boundary, μm     λᵣ - right wavelength boundary, μm     tol - intergation tolerance\n\n\n\n\n\n","category":"method"},{"location":"pluto_tests_git/","page":"PlanckFunctions","title":"PlanckFunctions","text":"\n<p>The static version of <b>PlanckFunctions.jl</b> Pluto notebook is available at :<a href=\"../planck_test_git.html\">planck_test_git.html</a>,\npdf version is available at:<a href=\"../assets/planck_test_git.pdf\">planck_test_git.pdf</a>\n.</p","category":"page"},{"location":"pluto_tests_git/","page":"PlanckFunctions","title":"PlanckFunctions","text":"Notebook file with PlanckFunctions.jl usage examples are available at Pluto notebooks.","category":"page"},{"location":"pluto_tests_git/","page":"PlanckFunctions","title":"PlanckFunctions","text":"To run these notebooks, you need:","category":"page"},{"location":"pluto_tests_git/","page":"PlanckFunctions","title":"PlanckFunctions","text":"Install julia language itself from its official download page \nInstall Pluto notebook from julia REPL by entering the following commands line-by-line:","category":"page"},{"location":"pluto_tests_git/","page":"PlanckFunctions","title":"PlanckFunctions","text":"import Pkg\nPkg.add(\"Pluto\")\nusing Pluto\nPluto.run()","category":"page"},{"location":"pluto_tests_git/","page":"PlanckFunctions","title":"PlanckFunctions","text":"The last line will launch the Pluto starting page in your default browser ","category":"page"},{"location":"pluto_tests_git/","page":"PlanckFunctions","title":"PlanckFunctions","text":"Copy/Clone the entire GitHub repository to your local folder. As far as PlanckFunctions.jl is not a registered package, all files needed to run the notebooks must be in the ../src folder with respect to  note_book_name.jl file location.\nOpen notebook's .jl- file in Pluto by providing the full path to the \"Open a notebook\" text field on Pluto's starting page. As far as Pluto has its own package manager, it will automatically install all necessary dependancies, which are marked in using cell of this file. ","category":"page"},{"location":"#PlanckFunctions.jl","page":"Home","title":"PlanckFunctions.jl","text":"","category":"section"},{"location":"#General-description","page":"Home","title":"General description","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PlanckFunctions.jl is designed to calculate the Planck's function thermal emission spectra and its derivatives.","category":"page"},{"location":"","page":"Home","title":"Home","text":"PlanckFunctions.jl package contains several functions to evaluate: \nBlackbody spectral intensity (Planck function)\nThe first and the second derivatives of Planck function with respect to the wavelength and temperature \nPlanck function fast integration over the specified wavelength region  ","category":"page"},{"location":"#Contact","page":"Home","title":"Contact","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To contact me, please do it through the GitHub repository.","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) 2025 Roman Mironov","category":"page"},{"location":"","page":"Home","title":"Home","text":"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","category":"page"},{"location":"","page":"Home","title":"Home","text":"The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","category":"page"},{"location":"","page":"Home","title":"Home","text":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.","category":"page"}]
}
