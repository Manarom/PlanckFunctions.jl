var documenterSearchIndex = {"docs":
[{"location":"pluto_tests_git/","page":"Examples","title":"Examples","text":"\n<p>The static version of <b>PlanckFunctions.jl</b> Pluto notebook is available at :<a href=\"../planck_test_git.html\">planck_test_git.html</a>\n.</p","category":"page"},{"location":"pluto_tests_git/","page":"Examples","title":"Examples","text":"Notebook file with PlanckFunctions.jl usage examples are available at Pluto notebooks.","category":"page"},{"location":"pluto_tests_git/","page":"Examples","title":"Examples","text":"To run these notebooks, you need:","category":"page"},{"location":"pluto_tests_git/","page":"Examples","title":"Examples","text":"Install julia language itself from its official download page \nInstall Pluto notebook from julia REPL by entering the following commands line-by-line:","category":"page"},{"location":"pluto_tests_git/","page":"Examples","title":"Examples","text":"import Pkg\nPkg.add(\"Pluto\")\nusing Pluto\nPluto.run()","category":"page"},{"location":"pluto_tests_git/","page":"Examples","title":"Examples","text":"The last line will launch the Pluto starting page in your default browser ","category":"page"},{"location":"pluto_tests_git/","page":"Examples","title":"Examples","text":"Copy/Clone the entire GitHub repository to your local folder. As far as PlanckFunctions.jl is not a registered package, all files needed to run the notebooks must be in the ../src folder with respect to  note_book_name.jl file location.\nOpen notebook's .jl- file in Pluto by providing the full path to the \"Open a notebook\" text field on Pluto's starting page. As far as Pluto has its own package manager, it will automatically install all necessary dependancies, which are marked in using cell of this file. ","category":"page"},{"location":"PlanckFunctions/#Functions-for-blackbody-thermal-emission-(and-its-derivatives)-calculation","page":"PlanckFunctions","title":"Functions for blackbody thermal emission (and its derivatives) calculation","text":"","category":"section"},{"location":"PlanckFunctions/#PlanckFunctions.PlanckFunctions","page":"PlanckFunctions","title":"PlanckFunctions.PlanckFunctions","text":"PlanckFunctions module provides a set of functions for evaluating  the Planck thermal emission spectrum intensity (spectral radiance) and  its derivatives with respect to wavelength and temperature. It also provides  function to evaluate the integral over the wavelength radiance and Rosseland-averaged  and Planck-averaged of spectral coefficients. \n\nWavelength units are microns and all temperatures should be in Kelvins. \n\nMain functions are:  ibb  - spectral intensity (spectral radiance) in [W/m²⋅sr⋅μm]\n\n∇ₜibb  - spectral intensity first derivative with respect to temperature\n\n∇²ₜibb  - spectral intensity second derivative with respect to temperature\n\n∇ₗibb  - spectral intensity first derivative with respect to wavelength\n\n∇²ₗibb  - spectral intensity second derivative with respect to wavelength\n\nrosseland_averaged_attenuation - Rosseland-averaging of spectral attenuation\n\nplanck_averaged_attenuation - Planck-averaging of spectral attenuation\n\nMain literature sources are:\n\nJ.R.Howell,M.P.Menguc,J.R.Howell,M.P.Menguc,K.Daun,R.Siegel. Thermal radiation heat transfer. Seventh edition. 2021 \n\nRisch, T.K., User's Manual: Routines for Radiative Heat Transfer and Thermometry. NASA/TM-2016-219103. 2016, Edwards, California: Armstrong flight Research Center\n\n\n\n\n\n","category":"module"},{"location":"PlanckFunctions/#PlanckFunctions.C₁","page":"PlanckFunctions","title":"PlanckFunctions.C₁","text":"C₁ constant for Planck function multiplier in [W⋅μm⁴/(m²⋅sr)]\nsource J.R.Howell,M.P.Menguc,J.R.Howell,M.P.Menguc,K.Daun,R.Siegel. Thermal radiation heat transfer. Seventh edition. 2021  see Appendix A.\nMultiplied by 2 with respect to the source.\n\n\n\n\n\n","category":"constant"},{"location":"PlanckFunctions/#PlanckFunctions.C₂","page":"PlanckFunctions","title":"PlanckFunctions.C₂","text":"C₂ constant for Planck spectral intensity exponent in [μm⋅K]\nsource J.R.Howell,M.P.Menguc,J.R.Howell,M.P.Menguc,K.Daun,R.Siegel. Thermal radiation heat transfer. Seventh edition. 2021  see Appendix A.\n\n\n\n\n\n","category":"constant"},{"location":"PlanckFunctions/#PlanckFunctions.C₃","page":"PlanckFunctions","title":"PlanckFunctions.C₃","text":"C₃ constant of Wien's displacement law [μm⋅K]\nsource J.R.Howell,M.P.Menguc,J.R.Howell,M.P.Menguc,K.Daun,R.Siegel. Thermal radiation heat transfer. Seventh edition. 2021  see Appendix A.\n\n\n\n\n\n","category":"constant"},{"location":"PlanckFunctions/#PlanckFunctions.C₄","page":"PlanckFunctions","title":"PlanckFunctions.C₄","text":"C₄ constant in equation for maximum blackbody intensity [W/(m²⋅μm⋅sr*K⁵)]\nsource J.R.Howell,M.P.Menguc,J.R.Howell,M.P.Menguc,K.Daun,R.Siegel. Thermal radiation heat transfer. Seventh edition. 2021  see Appendix A.\n\n\n\n\n\n","category":"constant"},{"location":"PlanckFunctions/#PlanckFunctions.σ","page":"PlanckFunctions","title":"PlanckFunctions.σ","text":"Stefan-Boltzmann constant [W/(m²*K⁴)]\nsource J.R.Howell,M.P.Menguc,J.R.Howell,M.P.Menguc,K.Daun,R.Siegel. Thermal radiation heat transfer. Seventh edition. 2021  see Appendix A.\n\n\n\n\n\n","category":"constant"},{"location":"PlanckFunctions/#PlanckFunctions.Dₗibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"PlanckFunctions.Dₗibb","text":"Dₗibb(λ,T)\n\nReturns a three-element tuple of (1.bb intensity,2.its first and 3.second derivative \nwith respect to the wavelentgh)\n\nInput:\n    λ - wavelength, μm\n    T - temperature, K\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.Dₜibb!-Tuple{Tuple{AbstractVector, AbstractVector, AbstractVector}, AbstractVector, Any}","page":"PlanckFunctions","title":"PlanckFunctions.Dₜibb!","text":"Dₜibb!(input_tuple, λ::AbstractVector,T)\n\nIn-place filling the tuple of (bb intensity, its first ,and second ) derivatives with \nrespect to temperature\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T³))*[(C₂/(λ*T))*(2*eᵃ¹/(eᵃ¹-1)-1)-2]\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(a₁/(λ⁵*T²))*[a₁*(2*eᵃ¹/(eᵃ¹-1) -1)-2]\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\nd²Ibb/dT² = C₁*a₂*a₃*(a₁/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2]\n    as far as \n        Ibb = (λ⁻⁵)* C₁*a₂\n    and \n        dIbb/dT = C₁*a₃*a₂*a₁*(1/(λ⁵*T)) = a₃*a₁*Ibb/T \n    hense\n        d²Ibb/dT² = C₁*a₂*a₃*a₁*(1/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2] \n            = [a₃*a₁*Ibb/T^2]*[a₁*(2*a₃ - 1))-2] \n                = [(dIbb/dT)/T]*[a₁*(2*a₃ - 1))-2] \nInput:\n    input_tuple, [Nx0 vector or nothing,Nx0 vector or nothing, Nx0 vector or nothing]\n    λ - wavelength, μm, [Nx0]\n    T - temperature, K\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.Dₜibb-Tuple{AbstractVector, AbstractVector}","page":"PlanckFunctions","title":"PlanckFunctions.Dₜibb","text":"Dₜibb(λ::AbstractVector,T::AbstractVector)\n\nCalculates tuple of (Ibb,dIbb/dT,d²Ibb/dT²) calculated according to:\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T³))*[(C₂/(λ*T))*(2*eᵃ¹/(eᵃ¹-1)-1)-2]\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(a₁/(λ⁵*T²))*[a₁*(2*eᵃ¹/(eᵃ¹-1) -1)-2]\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\nd²Ibb/dT² = C₁*a₂*a₃*(a₁/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2]\n    as far as \n        Ibb = (λ⁻⁵)* C₁*a₂\n    and \n        dIbb/dT = C₁*a₃*a₂*a₁*(1/(λ⁵*T)) = a₃*a₁*Ibb/T \n    hense\n        d²Ibb/dT² = C₁*a₂*a₃*a₁*(1/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2] \n            = [a₃*a₁*Ibb/T^2]*[a₁*(2*a₃ - 1))-2] \n                = [(dIbb/dT)/T]*[a₁*(2*a₃ - 1))-2] \nInput:\n    λ - wavelength region, μm\n    T - temperature, Kelvins\nReturns:\n    (Ibb,dIbb/dT,d²Ibb/dT²)\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.a₁₂₃!-Tuple{AbstractMatrix, AbstractVector, Float64}","page":"PlanckFunctions","title":"PlanckFunctions.a₁₂₃!","text":"a₁₂₃!(amat::AbstractMatrix,λ::AbstractVector,T::Float64)\n\nIn-place filling of the intermediate matrix\na₁=C₂/(λ*T)  - amat first column\na₂ = 1/(eᵃ¹-1)  - amat second column \na₃ = eᵃ¹/(eᵃ¹-1) - amat third column\n\nInput:\n    amat - matrix of intermediate coefficients size [Nx3]\n    λ - wavelength in μm,  [Nx0]\n    T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.a₁₂₃-Tuple{Any, Any}","page":"PlanckFunctions","title":"PlanckFunctions.a₁₂₃","text":"a₁₂₃(λ::Float64,T::Float64)\n\nReturn tuple of three values:\n\n1 - a1 = C₂/(λ*T)\n2 - a2 = 1/expm1(a1)\n3 - a3 = exp(a1)*a2\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.band_power-Tuple{Any}","page":"PlanckFunctions","title":"PlanckFunctions.band_power","text":"band_power(T;λₗ=0.0,λᵣ=Inf,tol=1e-6)\n\nTotal bb with temperature T integral intensity within (in-band radiance), [W/(m²⋅sr)]\nthe spectral range λₗ...λᵣ (by default the range is 0...inf)\ntol - tolerance of intehration\n\nInput:\n    T - temperature,Kelvins\n    (optional)\n    λₗ - left wavelength boundary, μm\n    λᵣ - right wavelength boundary, μm\n    tol - intergation tolerance\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.ibb!-Tuple{AbstractVector, AbstractVector, AbstractMatrix}","page":"PlanckFunctions","title":"PlanckFunctions.ibb!","text":"ibb!(i::AbstractVector,λ::AbstractVector,amat::AbstractMatrix)::Nothing\n\nIn-place blackbody intensity with intermediate coefficients provided externally, [W/m2-sr-mkm]\nIbb =  C₁*(λ⁻⁵)*a₂ , where\na₁=C₂/(λ*T)  - amat first column\na₂ = 1/(eᵃ¹-1)  - amat second column \n\nInput:\n    i - BB intensity, [Nx0]\n    λ - wavelength in μm,  [Nx0]\n    amat - matrix of intermediate coefficients,  [Nx3]\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.ibb!-Tuple{AbstractVector, AbstractVector, Float64}","page":"PlanckFunctions","title":"PlanckFunctions.ibb!","text":"ibb!(i::AbstractVector,λ::AbstractVector,T::Float64)\n\nIn-place blackbody intensity,  [W/m²⋅sr⋅μm]\nIbb = (λ⁻⁵)* C₁/(eᵃ¹-1) , where a₁=C₂/(λ*T)\nInput:\n    i - bb intensity vector, [Nx0]\n    λ - wavelength in μm, [Nx0]\n    T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.ibb-Tuple{AbstractVector, AbstractMatrix}","page":"PlanckFunctions","title":"PlanckFunctions.ibb","text":"ibb(λ::AbstractVector,amat::AbstractMatrix)\n\nBlackbody spectral intensity (spectral radiance)  with intermediate matrix provided externally, [W/m²⋅sr⋅μm]\nIbb =  C₁*(λ⁻⁵)*a₂ , where\na₁=C₂/(λ*T)  - amat first column\na₂ = 1/(eᵃ¹-1)  - amat second column \nInput:\n    amat - matrix of intermediate coefficients,  [Nx3]\n    λ - wavelength in μm,  [Nx0]\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.ibb-Tuple{AbstractVector, AbstractVector}","page":"PlanckFunctions","title":"PlanckFunctions.ibb","text":"ibb(λ::AbstractVector,T::AbstractVector)\n\nBlackbody spectral intensity (spectral radiance),  [W/m²⋅sr⋅μm]\nIbb = (λ⁻⁵)* C₁/(eᵃ¹-1) , where a₁=C₂/(λ*T)\nInput:\n    λ - wavelength in μm, [Nx0]\n    T - temperature in Kelvins [Mx0]\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.ibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"PlanckFunctions.ibb","text":"ibb(λ,T)\n\nBlackbody spectral intensity (spectral radiance), [W/m²⋅sr⋅μm]\nIbb = (λ⁻⁵)* C₁/(eᵃ¹-1) , where a₁=C₂/(λ*T)\nInput:\n    λ - wavelength in μm\n    T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.planck_averaged-Tuple{AbstractVector, AbstractVector, Number}","page":"PlanckFunctions","title":"PlanckFunctions.planck_averaged","text":"planck_averaged(x::AbstractVector, λ::AbstractVector,T::Number)\n\nEvaluates the Planck-averaged value of x(λ) for temperature T:\n\nxᵣ = ∫x(λ)ibb(λ,T)dλ/∫ibb(λ,T)dλ \n\nCan be used for example to evaluate the integral emissiovity from measured spectral emissivity\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.planck_averaged_attenuation-Tuple{AbstractVector, AbstractVector, Number}","page":"PlanckFunctions","title":"PlanckFunctions.planck_averaged_attenuation","text":"planck_averaged_attenuation(α::AbstractVector, λ::AbstractVector,T::Number)\n\nEvaluates the Planck-averaged spectral attenuation coefficient (the summation of\nspectral scattering and absorption coefficients) α(λ) for temperature T:\n\nαᵣ = (∫(1/α(λ))⋅ibb(λ,T)dλ/∫ibb(λ,T)dλ)⁻¹\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.power-Tuple{Any}","page":"PlanckFunctions","title":"PlanckFunctions.power","text":"power(T)\n\nReturns integral (over the wavelength) intensity of BB (radiance)  at temperature T\n\nUnits: W/(m²⋅sr)\n\nInput:\n    T - temperature, K\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.rosseland_averaged_attenuation-Tuple{AbstractVector, AbstractVector, Number}","page":"PlanckFunctions","title":"PlanckFunctions.rosseland_averaged_attenuation","text":"rosseland_averaged_attenuation(α::AbstractVector, λ::AbstractVector,T::Number)\n\nEvaluates the Rosseland-averaged spectral attenuation coefficient (the summation of\nspectral scattering and absorption coefficients) α(λ) for temperature T:\n\nαᵣ = (∫(1/α(λ))⋅∇ₜibb(λ,T)dλ/∫∇ₜibb(λ,T)dλ)⁻¹\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.second_order_polynomial_fit-NTuple{6, Any}","page":"PlanckFunctions","title":"PlanckFunctions.second_order_polynomial_fit","text":"second_order_polynomial_fit(x1,x2,x3,g1,g2,g3)\n\nHardcoded second order polynomial lsqr fitting\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.tₘ-Tuple{Any}","page":"PlanckFunctions","title":"PlanckFunctions.tₘ","text":"tₘ(λ)\n\nThe temperature of BB having maximum at wavelength λ in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.units-Tuple{Function}","page":"PlanckFunctions","title":"PlanckFunctions.units","text":"units(f::Function)\n\nreturns units string of output quantity  return\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.weighted_average","page":"PlanckFunctions","title":"PlanckFunctions.weighted_average","text":"weighted_average(α::AbstractVector, λ::AbstractVector,T,g::Union{typeof(ibb),typeof(∇ₜibb),typeof(∇²ₜibb)},f::Function=identity)\n\nGeneric function to evaluate the averaged value of some `f(x)` function of variable `x` dependent\non wavelength `λ` for temperature `T`. Uses linear approximation for the discrete variable and square polynomial \nfor the g function \n\nxᵣ = ∫f(x)g(λ,T)dλ/∫g(λ,T)dλ, the default value of f is inv, e.g. if f = inv:\nxᵣ = ∫g(λ,T)/x(λ)dλ/∫g(λ,T)dλ\n\n\n\n\n\n","category":"function"},{"location":"PlanckFunctions/#PlanckFunctions.λₘ-Tuple{Any}","page":"PlanckFunctions","title":"PlanckFunctions.λₘ","text":"λₘ(T)\n\nThe wavelength (in μm) of bb intensity maximum vs temperature T \nargmax(Planck(T))  - Wien's displacement law\n\nInput:\n    T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇²ₗibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"PlanckFunctions.∇²ₗibb","text":"∇²ₗibb(λ,T)\n\nBB intensity second derivative with respect to the wavelength\n\nInput:\n    λ - wavelength, μm\n    T - temperature, K\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇²ₜibb!-Tuple{AbstractMatrix{Float64}, AbstractVector{Float64}, AbstractVector{Float64}}","page":"PlanckFunctions","title":"PlanckFunctions.∇²ₜibb!","text":"∇²ₜibb!(h::AbstractMatrix{Float64},λ::AbstractVector{Float64},T::AbstractVector{Float64})\n\nIn-place bb intensity second order derivative with respect to temperature\n\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T³))*[(C₂/(λ*T))*(2*eᵃ¹/(eᵃ¹-1)-1)-2]\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(a₁/(λ⁵*T²))*[a₁*(2*eᵃ¹/(eᵃ¹-1) -1)-2]\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\nd²Ibb/dT² = C₁*a₂*a₃*(a₁/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2]\n\nInput :\n            h  - to be filled, [Nx0]\n            λ - wavelength in μm, [Nx0]\n            T - tmperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇²ₜibb!-Tuple{AbstractVector{Float64}, AbstractVector{Float64}, Float64, AbstractMatrix{Float64}}","page":"PlanckFunctions","title":"PlanckFunctions.∇²ₜibb!","text":"∇²ₜibb!(h::AbstractVector{Float64},λ::AbstractVector{Float64},T::Float64,amat::AbstractMatrix{Float64})::Nothing\n\nIn-place bb intensity second order derivative with respect to temperature with \nintermediate matrix provided externally\n\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T³))*[(C₂/(λ*T))*(2*eᵃ¹/(eᵃ¹-1)-1)-2]\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(a₁/(λ⁵*T²))*[a₁*(2*eᵃ¹/(eᵃ¹-1) -1)-2]\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\nd²Ibb/dT² = C₁*a₂*a₃*(a₁/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2]\n\nInput :\n        h  - to be filled, [Nx0]\n        λ - wavelength in μm, [Nx0]\n        T - temperature in Kelvins\n        amat - matrix of intermediate coefficients,  [Nx3]\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇²ₜibb!-Tuple{AbstractVector{Float64}, AbstractVector{Float64}, Float64}","page":"PlanckFunctions","title":"PlanckFunctions.∇²ₜibb!","text":"∇²ₜibb!(h::AbstractVector{Float64},λ::AbstractVector{Float64},T::Float64)\n\nIn-place bb intensity second order derivative with respect to temperature\n\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T³))*[(C₂/(λ*T))*(2*eᵃ¹/(eᵃ¹-1)-1)-2]\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(a₁/(λ⁵*T²))*[a₁*(2*eᵃ¹/(eᵃ¹-1) -1)-2]\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\nd²Ibb/dT² = C₁*a₂*a₃*(a₁/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2]\n\nInput :\n            h  - to be filled, [Nx0]\n            λ - wavelength in μm, [Nx0]\n            T - tmperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇²ₜibb!-Tuple{AbstractVector{Float64}, Float64, AbstractMatrix{Float64}, AbstractVector{Float64}}","page":"PlanckFunctions","title":"PlanckFunctions.∇²ₜibb!","text":"∇²ₜibb!(h::AbstractVector{Float64},T::Float64,amat::AbstractMatrix{Float64},∇i::AbstractVector{Float64})::Nothing\n\nIn-place bb intensity second order derivative with respect to temperature \nwith provided both the intermediate matrix amat and the the Planck function first derivative\n\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T³))*[(C₂/(λ*T))*(2*eᵃ¹/(eᵃ¹-1)-1)-2]\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(a₁/(λ⁵*T²))*[a₁*(2*eᵃ¹/(eᵃ¹-1) -1)-2]\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\nd²Ibb/dT² = C₁*a₂*a₃*(a₁/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2]\n    as far as \n        Ibb = (λ⁻⁵)* C₁*a₂\n    and \n        dIbb/dT = C₁*a₃*a₂*a₁*(1/(λ⁵*T)) = a₃*a₁*Ibb/T \n    hense\n        d²Ibb/dT² = C₁*a₂*a₃*a₁*(1/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2] \n            = [a₃*a₁*Ibb/T^2]*[a₁*(2*a₃ - 1))-2] \n                = [(dIbb/dT)/T]*[a₁*(2*a₃ - 1))-2] \nInput :\n        h  - to be filled, [Nx0]\n        λ - wavelength in μm, [Nx0]\n        amat - matrix of intermediate coefficients,  [Nx3]\n        ∇i - vector of bb intensity first derivatives, [Nx0]\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇²ₜibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"PlanckFunctions.∇²ₜibb","text":"∇²ₜibb(λ,T)\n\nBB intensity second derivative with respect to temperature\n\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T³))*[(C₂/(λ*T))*(2*eᵃ¹/(eᵃ¹-1)-1)-2]\nd²Ibb/dT² = C₁*(eᵃ¹/(eᵃ¹-1)²)*(a₁/(λ⁵*T²))*[a₁*(2*eᵃ¹/(eᵃ¹-1) -1)-2]\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\nd²Ibb/dT² = C₁*a₂*a₃*(a₁/(λ⁵*T²))*[a₁*(2*a₃ - 1))-2]\n\nInput :\n            λ - wavelength in μm\n            T - tmperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇ₗibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"PlanckFunctions.∇ₗibb","text":"∇ₗibb(λ,T)\n\n\nBB intensity first derivative with respect to the wavelength\n\nInput:\n    λ - wavelength, μm\n    T - temperature, K\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇ₜibb!-Tuple{AbstractMatrix, AbstractVector, AbstractVector}","page":"PlanckFunctions","title":"PlanckFunctions.∇ₜibb!","text":"∇ₜibb!(g::AbstractMatrix,λ::AbstractVector,T::AbstractVector)\n\nIn-place BB intensity first derivative with respect to temperature\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\ndIbb/dT = C₁*a₃*a₂*a₁*(1/(λ⁵*T))\nInput:\n    g - vector to be filled, [Nx0]\n    λ - wavelength in μm, [Nx0]\n    T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇ₜibb!-Tuple{AbstractVector, AbstractVector, Any, AbstractMatrix}","page":"PlanckFunctions","title":"PlanckFunctions.∇ₜibb!","text":"∇ₜibb!(g::AbstractVector,λ::AbstractVector,T,amat::AbstractMatrix)\n\nIn-place bb intensity first derivative with respect to temperature\nwith externally provided amat  - matrix with columns a₁,a₂,a₃\n\ndIbb/dT = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T²))\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\ndIbb/dT = C₁*a₃*a₂*a₁*(1/(λ⁵*T))\n\nInput:\n    g - to be filled, [Nx0]\n    λ - wavelength in μm, [Nx0]\n    T - temperature in Kelvins\n    amat - matrix of intermediate coefficients, [Nx3]\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇ₜibb!-Tuple{AbstractVector, Any, AbstractMatrix, AbstractVector}","page":"PlanckFunctions","title":"PlanckFunctions.∇ₜibb!","text":"∇ₜibb!(g::AbstractVector,T, amat::AbstractMatrix,i::AbstractVector)::Nothing\n\nIn-place bb intensity first derivative with respect to temperature\nwith externally provided amat  - matrix with columns a₁,a₂,a₃\n\ndIbb/dT = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T²))\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\ndIbb/dT = C₁*a₃*a₂*a₁*(1/(λ⁵*T))\nas far as Ibb = C₁*a₂/λ⁵\ndIbb/dT = a₃*a₁*C₁*(a₂/λ⁵)*(1/T)=a₃*a₁*Ibb/T\n\nInput:\n    g - to be filled, [Nx0]\n    λ - wavelength in μm, [Nx0]\n    T - temperature in Kelvins\n    amat - matrix of intermediate coefficients, [Nx3]\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇ₜibb-Tuple{AbstractVector, Any, AbstractMatrix}","page":"PlanckFunctions","title":"PlanckFunctions.∇ₜibb","text":"∇ₜibb(λ::AbstractVector,T,amat::AbstractMatrix)\n\nBB intensity first derivative with respect to temperature\nwith externally provided matrix of intermediate coefficients\ndIbb/dT = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T²))\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   \na₃ = eᵃ¹/(eᵃ¹-1) \ndIbb/dT = C₁*a₃*a₂*a₁*(1/(λ⁵*T))\nInput:\n    λ - wavelength in μm, [Nx0]\n    T - temperature in Kelvins\n    amat - matrix of intermediate coefficients, [Nx3]\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∇ₜibb-Tuple{Any, Any}","page":"PlanckFunctions","title":"PlanckFunctions.∇ₜibb","text":"∇ₜibb(λ,T)\n\nBB intensity first derivative with respect to temperature\ndIbb/dT = C₁*(eᵃ¹/(eᵃ¹-1)²)*(C₂/(λ⁶*T²))\na₁=C₂/(λ*T)\na₂ = 1/(eᵃ¹-1)   #  1/expm1(a1)\na₃ = eᵃ¹/(eᵃ¹-1) #  exp(a)/expm1(a)\ndIbb/dT = C₁*a₃*a₂*a₁*(1/(λ⁵*T))\nInput:\n    λ - wavelength in μm\n    T - temperature in Kelvins\n\n\n\n\n\n","category":"method"},{"location":"PlanckFunctions/#PlanckFunctions.∫ibbₗ-Tuple{Any}","page":"PlanckFunctions","title":"PlanckFunctions.∫ibbₗ","text":"∫ibbₗ(T;λₗ=0.0,λᵣ=Inf,tol=1e-6)\n\nRelative (with respect to the integral power in the whole spectrum)\nintegral intensity of bb in the spectral range λₗ...λᵣ (by default the range is 0...inf)\n\nInput:\n    T - temperature,Kelvins\n    (optional)\n    λₗ - left wavelength boundary, μm\n    λᵣ - right wavelength boundary, μm\n    tol - intergation tolerance\n\n\n\n\n\n","category":"method"},{"location":"TestingData/#Functions-for-blackbody-thermal-emission-(and-its-derivatives)-calculation","page":"TestingData","title":"Functions for blackbody thermal emission (and its derivatives) calculation","text":"","category":"section"},{"location":"TestingData/#TestingData","page":"TestingData","title":"TestingData","text":"This module contains some  hardcoded data obtained from Berger, Chris G. 'Blackbody Calculator', Optics: The Website, https://www.opticsthewebsite.com/OpticsCalculators . Accessed on 5/14/2025 \n\n\n\n\n\n","category":"module"},{"location":"TestingData/#Main.TestingData.benchmark_data","page":"TestingData","title":"Main.TestingData.benchmark_data","text":"The data for testing was obtained from\n\nBerger, Chris G. 'Blackbody Calculator', Optics: The Website, https://www.opticsthewebsite.com/OpticsCalculators . Accessed on 5/14/2025\n\n\n\n\n\n","category":"constant"},{"location":"TestingData/#Main.TestingData.read_temperature_data-Tuple{Any}","page":"TestingData","title":"Main.TestingData.read_temperature_data","text":"read_temperature_data(tag)\n\nFunctions to read benchmark data spectrum from the default testing data folder\n\n\n\n\n\n","category":"method"},{"location":"TestingData/#Main.TestingData.temperatures-Tuple{}","page":"TestingData","title":"Main.TestingData.temperatures","text":"temperatures()\n\nReturns numerical array of all temperatures in benchmark\n\n\n\n\n\n","category":"method"},{"location":"TestingData/#Main.TestingData.testing_data-Tuple{String}","page":"TestingData","title":"Main.TestingData.testing_data","text":"testing_data(tag::String)\n\nreturns benchmark data for specified tag\n\n\n\n\n\n","category":"method"},{"location":"#PlanckFunctions.jl","page":"Home","title":"PlanckFunctions.jl","text":"","category":"section"},{"location":"#General-description","page":"Home","title":"General description","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PlanckFunctions.jl is designed to calculate the Planck's function thermal emission spectra and its derivatives.","category":"page"},{"location":"","page":"Home","title":"Home","text":"PlanckFunctions.jl package contains several functions to evaluate: \nBlackbody spectral intensity (Planck function)\nThe first and the second derivatives of Planck function with respect to the wavelength and temperature \nPlanck function fast integration over the specified wavelength region  ","category":"page"},{"location":"#Contact","page":"Home","title":"Contact","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To contact me, please do it through the GitHub repository.","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) 2025 Roman Mironov","category":"page"},{"location":"","page":"Home","title":"Home","text":"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","category":"page"},{"location":"","page":"Home","title":"Home","text":"The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","category":"page"},{"location":"","page":"Home","title":"Home","text":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.","category":"page"}]
}
